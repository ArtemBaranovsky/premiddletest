Барановский	Артем Сергеевич 		

a.baranovskyi@urancompany.com

Тестовые задачи


1. Сессии, кеши, сложные формы

Мы создаем форум, где пользователи пишут что хотят. И некоторые пользователи

пишутмегадлинныенеразбитыепробеламистрокичтожеделатьтотуткоторыеломают верстку. Напишите как эту проблему можно решить и как лучше. Напишите код решения (форму отправки сообщения из одного текстового поля на форум с обработчиком) и тесты к нему. Учтите также защиту от спамеров и ботов с помощью “капчи” различного вида (т.е. при первом подозрении на “ботовость” мы показываем простую капчу, дальше сложнее, вплоть до подтверждения по смс).


2. Трай, кетч, простые классы

Напишите класс для работы с файловым кешем, где Cache::put($ident, $value) сохраняет значение, а Cache::get($ident) возвращает. Учитывайте что папка кеша может быть недоступна (возвращать ошибку), запись может оборваться, чтение может давать битое значение (записали массив, файл “покорежился”, массив стал не массивом). Все варианты записи (скаляр, массив, переменная) сделать с тестами.


3.Трейты, интерфейсы, наследование классов

Напишите два класса для админки страниц сайта, один - просто страница (название, текст, френдли урл (slug)), второй - особая страница (название, несколько блоков текста, френдли урл (slug)). Сделать возможность расширять особые страницы на дополнительные типы (чтобы можно было делать простые формы в админке - например, в один тип страниц добавить поля изображений для блоков, в другой - прикрепленный для скачивания файл).


4. Code review

<?php

/*

 * опишите что этот запрос делает, и можно ли его улучшить

 * заметьте - это Postgresql - предположительно не знакомая вам база данных и вам нужно почитать документацию прежде чем ответить

 */


$query = 'SELECT rev.id, COALESCE(SUM(CASE WHEN rait.mark=-1 THEN 1 END), 0) AS review_dislikes

		          FROM reviews AS rev

		          LEFT JOIN public.reviews_rating AS rait ON (rait.id_review=rev.id AND rait.status=0)

		          WHERE rev.id_item = 222 AND rev.status IN (0,1)

		          GROUP BY rev.id

		          ORDER BY rev.crtime DESC';